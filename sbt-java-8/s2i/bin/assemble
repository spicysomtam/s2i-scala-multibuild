#!/bin/bash -e
#
# S2I assemble script for the 'sti-scala' image.
# The 'assemble' script builds your application source ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#
# Set env var DEBUG to something to switch on debugging...
[ ! -z "$DEBUG" ] && set -x

if [ "$1" = "-h" ]; then
	# If the 'sti-scala' assemble script is executed with '-h' flag,
	# print the usage.
	exec /usr/local/sti/usage
fi

# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts"
  cp -Rn /tmp/artifacts/. ./
	rm -rf /tmp/artifacts
fi

echo "---> Installing application source"
cp -Rn /tmp/src/. ./
rm -rf /tmp/src

echo "---> Building application from source"
# Space delimited list of dir and build targets: eg "dir1/clean dir2/publishLocal dir3/publishLocal:docker"
# Passed as env var to s2i build (--help for the args).

for d in /opt/app-root/src/.ivy2 /opt/app-root/src/.sbt /opt/app-root/src/.sbt/boot
do
  echo $d
  ls -la $d
done

for b in $SBT_BUILDS
do
  IFS='/' args=($b)
  echo "---> Building in dir ${args[0]}"
  cd ${args[0]} || exit 1
  sbt -ivy /opt/app-root/src/.ivy2 -sbt-dir /opt/app-root/src/.sbt -sbt-boot /opt/app-root/src/.sbt/boot --error ${args[1]}

  echo "---> Updating permissions"
  chmod -R g+rw .

  [ -d target/universal/scripts ] && {
    chgrp -R 0 target/universal/scripts
    chmod -R g+x target/universal/scripts
  }

  [ -d target/universal ] && {
    echo "---> Removing windows .bat files"
    find target/universal -type f -name "*.bat" -exec rm -f {} \;
  }

  cd -
  echo "---> Completed building in dir ${args[0]}"
done
